<?xml version="1.0" encoding="UTF-8"?>
<!--

     NEXUSe2e Business Messaging Open Source
     Copyright 2000-2021, direkt gruppe GmbH

     This is free software; you can redistribute it and/or modify it
     under the terms of the GNU Lesser General Public License as
     published by the Free Software Foundation version 3 of
     the License.

     This software is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
     Lesser General Public License for more details.

     You should have received a copy of the GNU Lesser General Public
     License along with this software; if not, write to the Free
     Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
     02110-1301 USA, or see the FSF site: http://www.fsf.org.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">


  
  
  
  <bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="properties">
      <props>
        <prop key="configuration.base.xmlFile"></prop>
        <prop key="configuration.share1.path"></prop>
        <prop key="configuration.share1.name"></prop>
        <prop key="configuration.share2.path"></prop>
        <prop key="configuration.share2.name"></prop>
        <prop key="configuration.share3.path"></prop>
        <prop key="configuration.share3.name"></prop>
        <prop key="configuration.share4.path"></prop>
        <prop key="configuration.share4.name"></prop>
        <prop key="configuration.share5.path"></prop>
        <prop key="configuration.share5.name"></prop>
        <prop key="database.timestamp.pattern"></prop>
        <prop key="default.charEncoding"></prop>
      </props>
    </property>
    <property name="locations">
      <list>
        <value>/WEB-INF/config/database.properties</value>
        <value>/WEB-INF/config/bean.properties</value>
        <value>file:///#{systemProperties['externalconfig']}//database.properties</value>
        <value>file:///#{systemProperties['externalconfig']}//bean.properties</value>
      </list>
    </property>
    <property name="ignoreResourceNotFound" value="true"/>
  </bean>

  <bean id="nexusTransportDispatcherMapping" class="org.nexuse2e.configuration.UpdateableUrlHandlerMapping">
    <property name="mappings">
      <value></value>
    </property>
  </bean>

  <bean id="engineController" class="org.nexuse2e.EngineController" init-method="initialize" destroy-method="shutdown">
    <property name="engineControllerStubClass" value="${engineController.stub.class}" />
    <property name="engine" ref="engine" />
    <property name="engineMonitor" ref="engineMonitor" />
    <property name="advancedControllerClass" value="${advancedController.class}" />
  </bean>

  <bean id="engineMonitor" class="org.nexuse2e.EngineMonitor" init-method="initialize">
    <property name="timeout" value="10000"/>
  	<property name="interval" value="10000"/>
  	<property name="autoStart" value="true" />
  	<property name="dataSource" ref="${datasource.type}"/>
  </bean>

  <bean id="baseConfigurationProvider" class="org.nexuse2e.configuration.XmlBaseConfigurationProvider">
    <constructor-arg value="${configuration.base.xmlFile}"/>
  </bean>
  
  <bean id="messageWorker" class="org.nexuse2e.messaging.impl.MessageWorkerImpl">
    <!-- Comment out following line to set message threadpool size. Default is 10 -->
    <!-- <constructor-arg value="10" /> -->
  </bean>

  <!-- Engine  -->
  <bean id="engine" class="org.nexuse2e.Engine">
    <property name="baseConfigurationProvider" ref="baseConfigurationProvider" />
    <property name="baseConfigurationProviderClass" value="${configuration.base.class}" />
    <property name="cacertsPath" value="${certificate.keystorePath.ca}" />
    <property name="certificatePath" value="${certificate.keystorePath.server}" />
    <property name="timestampPattern" value="${database.timestamp.pattern}" />
    <property name="databaseDialect" value="${database.dialect}" />
    <property name="transactionService" ref="transactionService" />
    <property name="configDao" ref="configDao" />
  	<property name="passwordValidation" value="${password.validation}" />    
    <property name="messageWorker" ref="messageWorker" />
    <property name="defaultCharEncoding" value="${default.charEncoding}" />
    <property name="idleGracePeriodInMinutes" value="10" />
    <property name="TransactionActivityTimeframeInWeeks" value="2" />
    <property name="DashboardTimeFrameInDays" value="1"/>
    <property name="retryLoggingTemplate">
      <value>
        Dear admin,
        The following data file was generated but could not be transferred successfully:

        {filename}

        Further information:
        Partner:      {partnerId}
        Choreography: {choreographyId}
        messageId: {messageId}
        conversationId: {conversationId}
        Action:       {actionId}
        Destination:  {connectionUrl}
        Retries:      {retries}
      </value>
    </property>
    <property name="advancedRetryLogging" value="true" />

  </bean>


  <context:annotation-config />


  <context:component-scan base-package="org.nexuse2e"/>
 
 
  <!-- RMI  -->
  <bean id="rmiServer" class="org.nexuse2e.integration.NEXUSe2eRMIServer">
    <property name="hostName" value="${rmi.hostName}" />
    <property name="interfaceName" value="${rmi.interfaceName}" />
    <property name="rmiPort" value="${rmi.rmiPort}" />
  </bean>

  <!-- Integration beans -->
  <bean id="httpIntegrationController" class="org.nexuse2e.integration.HTTPIntegrationController"></bean>
  <bean id="debugController" class="org.nexuse2e.integration.DebugController"></bean>
  <bean id="engineStatusController" class="org.nexuse2e.integration.EngineStatusController"></bean>
  <bean id="engineHTTPStatusController" class="org.nexuse2e.integration.EngineHTTPStatusController"></bean>

  <!-- ********************************************** -->
  <!-- Web services                                   -->
  <!-- ********************************************** -->

  <bean id="nexusE2EInterfaceBean" class="org.nexuse2e.integration.NEXUSe2eInterfaceImpl" />
  <bean id="engineStatusInterfaceBean" class="org.nexuse2e.integration.EngineStatusInterfaceImpl" />
  <bean id="nexuse2eUtilitiesBean" class="org.nexuse2e.integration.NEXUSe2eUtilitiesImpl" />

  <bean id="internal" 
    class="com.mchange.v2.c3p0.ComboPooledDataSource"
    destroy-method="close">
    
    <property name="driverClass"><value>${database.driverClassName}</value></property>
    <property name="jdbcUrl"><value>${database.url}</value></property>
    <property name="user"><value>${database.user}</value></property>
    <property name="password"><value>${database.password}</value></property>
    
    <property name="initialPoolSize"><value>3</value></property>
    <property name="minPoolSize"><value>3</value></property>
    <property name="maxPoolSize"><value>50</value></property>
    <!-- <property name="timeout"><value>0</value></property> -->   <!-- 0 means: no timeout -->
    <property name="idleConnectionTestPeriod"><value>200</value></property>
    <property name="acquireIncrement"><value>1</value></property>
    <property name="maxStatements"><value>0</value></property>  <!-- 0 means: statement caching is turned off.  -->
    <property name="numHelperThreads"><value>3</value></property>  <!-- 3 is default -->
    <!-- 
    <property name="testConnectionOnCheckout"><value>true</value></property>
   -->
  </bean>

  <!-- 
    <bean id="external" class="org.springframework.jndi.JndiObjectFactoryBean">
    <property name="jndiName" value="${datasource.logicalName}"/>
    </bean>
  -->

  <bean id="hibernateSessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
    <property name="dataSource" ref="${datasource.type}" />
    <!-- <property name="dataSource" ref="external"/> -->
    <!--  <property name="useTransactionAwareDataSource" value="false" />
     -->
    <property name="packagesToScan" value="org.nexuse2e"/>
    
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.show_sql">${database.showSQL}</prop>
        <prop key="hibernate.format_sql">${database.formatSQL}</prop>
        <prop key="hibernate.dialect">${database.dialect}</prop>
        <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>

        <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
        <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
        <prop key="hibernate.cache.use_second_level_cache">true</prop>
        <prop key="hibernate.cache.use_query_cache">true</prop>
        <!-- 
        <prop key="hibernate.current_session_context_class">thread</prop>
         -->
        <prop key="hibernate.query.substitutions">true 1, false 0, yes 'Y', no 'N'</prop>
       	
       	<prop key="hibernate.hbm2ddl.auto">update</prop>
       	<!-- 
       	<prop key="hibernate.default_schema">nexuse2e.dbo</prop>
       	 -->
       	
       	<!--  isolation needs to be configured on the datasource -->
        
        <!--
        <prop key="hibernate.c3p0.min_size">2</prop>
        <prop key="hibernate.c3p0.max_size">20</prop>
        <prop key="hibernate.c3p0.timeout">1800</prop>
        <prop key="hibernate.c3p0.max_statements">50</prop>
          <prop key="transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop>
        -->
      </props>
    </property>
  </bean>
  
  <tx:annotation-driven transaction-manager="txManager"/>

  <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
    <property name="sessionFactory" ref="hibernateSessionFactory" />
    <property name="dataSource" ref="${datasource.type}" />
  </bean>

  <aop:config>
    <aop:pointcut id="transactionPointcut" expression="execution(* org.nexuse2e.dao.*Impl.*(..))"/>
    <aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut"/>
  </aop:config>

  <tx:advice id="transactionAdvice" transaction-manager="txManager">
    <tx:attributes>
      <!-- 
      <tx:method name="get*" read-only="true"/> 
      -->
      <!-- default
      <tx:method name="*ForReport" propagation="REQUIRED" isolation="READ_UNCOMMITTED"/>
      -->
      <!-- oracle -->
      <tx:method name="*ForReport" propagation="REQUIRED" isolation="READ_COMMITTED"/>
      <tx:method name="updateTransaction" propagation="REQUIRED" isolation="READ_COMMITTED"/> <!-- isolation="SERIALIZABLE" READ_COMMITTED-->
      <tx:method name="*" propagation="REQUIRED" isolation="READ_COMMITTED"/> <!-- isolation="SERIALIZABLE" READ_COMMITTED-->
    </tx:attributes>
  </tx:advice>
  
  
 <!-- 
  <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
    <property name="sessionFactory" ref="hibernateSessionFactory"/>
  </bean>
 -->
  <bean id="logDao" class="org.nexuse2e.dao.LogDAOImpl">
  </bean>
  <bean id="configDao" class="org.nexuse2e.dao.ConfigDAOImpl">
  </bean>
  <bean id="transactionDao" class="org.nexuse2e.dao.TransactionDAOImpl">
  </bean>
  <bean id="persistentPropertyDao" class="org.nexuse2e.dao.PersistentPropertyDAOImpl">
  </bean>
 
  
  <bean id="lockInterceptor" class="org.nexuse2e.dao.LockAcquisitionInterceptor">
  	<property name="timeout" value="500" />
  	<property name="retries" value="20" />
  </bean>

  <bean id="transactionService" class="org.springframework.aop.framework.ProxyFactoryBean">
	<property name="proxyInterfaces"><value>org.nexuse2e.controller.TransactionService</value></property>
	<property name="target">
	  <bean class="org.nexuse2e.controller.TransactionServiceImpl">
	  	<property name="transactionDao" ref="transactionDao"/>
	  	<property name="logDao" ref="logDao"/>
	  </bean>
	</property>
	<property name="interceptorNames">
	  <list>
	    <value>lockInterceptor</value>
	  </list>
	</property>
  </bean>
  

  <!-- ui structure -->

  <bean id="targetProviderManager" class="org.nexuse2e.ui.structure.impl.DefaultTargetProviderManager">
    <property name="targetProviders">
      <map>
        <!-- add TargetProvider intances to the map below -->
        <entry>
          <key>
            <value>serverIdentityTargetProvider</value>
          </key>
          <bean class="org.nexuse2e.ui.structure.impl.ServerIdentityTargetProvider" />
        </entry>
        <entry>
          <key>
            <value>frontendPipelineTargetProvider</value>
          </key>
          <bean class="org.nexuse2e.ui.structure.impl.PipelineTargetProvider">
            <property name="frontend">
              <value>true</value>
            </property>
          </bean>
        </entry>
        <entry>
          <key>
            <value>backendPipelineTargetProvider</value>
          </key>
          <bean class="org.nexuse2e.ui.structure.impl.PipelineTargetProvider">
            <property name="frontend">
              <value>false</value>
            </property>
          </bean>
        </entry>
        <entry>
          <key>
            <value>componentTargetProvider</value>
          </key>
          <bean class="org.nexuse2e.ui.structure.impl.ComponentTargetProvider" />
        </entry>
        <entry>
          <key>
            <value>serviceTargetProvider</value>
          </key>
          <bean class="org.nexuse2e.ui.structure.impl.ServiceTargetProvider" />
        </entry>
        <entry>
          <key>
            <value>notifierTargetProvider</value>
          </key>
          <bean class="org.nexuse2e.ui.structure.impl.NotifierTargetProvider" />
        </entry>
        <entry>
          <key>
            <value>choreographyTargetProvider</value>
          </key>
          <bean class="org.nexuse2e.ui.structure.impl.ChoreographyTargetProvider" />
        </entry>
        <entry>
          <key>
            <value>collaborationPartnerTargetProvider</value>
          </key>
          <bean class="org.nexuse2e.ui.structure.impl.CollaborationPartnerTargetProvider" />
        </entry>
        <entry>
          <key>
            <value>participantTargetProvider</value>
          </key>
          <bean class="org.nexuse2e.ui.structure.impl.ParticipantTargetProvider" />
        </entry>
        <entry>
          <key>
            <value>actionTargetProvider</value>
          </key>
          <bean class="org.nexuse2e.ui.structure.impl.ActionTargetProvider" />
        </entry>
        <entry>
          <key>
            <value>userTargetProvider</value>
          </key>
          <bean class="org.nexuse2e.ui.structure.impl.UserTargetProvider" />
        </entry>
        <entry>
          <key>
            <value>roleTargetProvider</value>
          </key>
          <bean class="org.nexuse2e.ui.structure.impl.RoleTargetProvider" />
        </entry>
      </map>
    </property>
  </bean>

  <bean id="structureService" class="org.nexuse2e.ui.structure.impl.CachedXmlStructureServer" init-method="cacheMenuStructure">
    <property name="spec">
      <value>${struct.spec}</value>
    </property>
    <property name="targetProviderManager">
      <ref bean="targetProviderManager" />
    </property>
  </bean>
  
  <!-- Configuration bean for file download feature -->
  <bean id="fileDownloadConfiguration" class="org.nexuse2e.ui.action.tools.FileDownloadConfiguration">
    <property name="configuration">
      <map>
        <entry key="${configuration.share1.path}"><value>${configuration.share1.name}</value></entry>
        <entry key="${configuration.share2.path}"><value>${configuration.share2.name}</value></entry>
        <entry key="${configuration.share3.path}"><value>${configuration.share3.name}</value></entry>
        <entry key="${configuration.share4.path}"><value>${configuration.share4.name}</value></entry>
        <entry key="${configuration.share5.path}"><value>${configuration.share5.name}</value></entry>
      </map>
    </property>
  </bean>

</beans>
