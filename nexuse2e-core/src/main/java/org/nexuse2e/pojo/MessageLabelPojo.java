/**
 *  NEXUSe2e Business Messaging Open Source
 *  Copyright 2000-2021, direkt gruppe GmbH
 *
 *  This is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU Lesser General Public License as
 *  published by the Free Software Foundation version 3 of
 *  the License.
 *
 *  This software is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this software; if not, write to the Free
 *  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 *  02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
package org.nexuse2e.pojo;

// Generated 20.10.2006 15:50:01 by Hibernate Tools 3.2.0.beta6a

import java.util.Date;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Index;

/**
 * MessageLabelPojo generated by hbm2java
 */
@Entity
@Table(name = "nx_message_label")
public class MessageLabelPojo implements NEXUSe2ePojo {

    /**
     * 
     */
    private static final long serialVersionUID = -3388448752721707618L;

    // Fields    
    @Access(AccessType.PROPERTY)
    @Id
    @Column(name = "nx_message_label_id")
    @GeneratedValue(strategy = GenerationType.AUTO, generator = "native")
    @GenericGenerator(name = "native", strategy = "native")
    private int               nxMessageLabelId;

    @ManyToOne(fetch = FetchType.EAGER)
    @Index(name = "ix_message_label_1")
    @JoinColumn(name = "nx_message_id", nullable = false)
    private MessagePojo       message;

    @Column(name = "created_date", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date              createdDate;

    @Column(name = "modified_date", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date              modifiedDate;

    @Column(name = "modified_nx_user_id", nullable = false)
    private int               modifiedNxUserId;

    @Column(name = "message_label", length = 64)
    private String            label;

    @Column(name = "message_label_value", length = 512, nullable = false)
    private String            value;

    // Constructors

    /** default constructor */
    public MessageLabelPojo() {
        createdDate = new Date();
        modifiedDate = createdDate;
    }

    /** minimal constructor */
    public MessageLabelPojo( MessagePojo message, Date createdDate, Date modifiedDate, int modifiedNxUserId,
            String value ) {

        this.message = message;
        this.createdDate = createdDate;
        this.modifiedDate = modifiedDate;
        this.modifiedNxUserId = modifiedNxUserId;
        this.value = value;
    }

    /** full constructor */
    public MessageLabelPojo( MessagePojo message, Date createdDate, Date modifiedDate, int modifiedNxUserId,
            String label, String value ) {

        this.message = message;
        this.createdDate = createdDate;
        this.modifiedDate = modifiedDate;
        this.modifiedNxUserId = modifiedNxUserId;
        this.label = label;
        this.value = value;
    }

    // Property accessors
    public int getNxMessageLabelId() {

        return this.nxMessageLabelId;
    }

    public void setNxMessageLabelId( int nxMessageLabelId ) {

        this.nxMessageLabelId = nxMessageLabelId;
    }

    public int getNxId() {
        return nxMessageLabelId;
    }
    
    public void setNxId( int nxId ) {
        this.nxMessageLabelId = nxId;
    }
    
    public MessagePojo getMessage() {

        return this.message;
    }

    public void setMessage( MessagePojo message ) {

        this.message = message;
    }

    public Date getCreatedDate() {

        return this.createdDate;
    }

    public void setCreatedDate( Date createdDate ) {

        this.createdDate = createdDate;
    }

    public Date getModifiedDate() {

        return this.modifiedDate;
    }

    public void setModifiedDate( Date modifiedDate ) {

        this.modifiedDate = modifiedDate;
    }

    public int getModifiedNxUserId() {

        return this.modifiedNxUserId;
    }

    public void setModifiedNxUserId( int modifiedNxUserId ) {

        this.modifiedNxUserId = modifiedNxUserId;
    }

    public String getLabel() {

        return this.label;
    }

    public void setLabel( String label ) {

        this.label = label;
    }

    public String getValue() {

        return this.value;
    }

    public void setValue( String value ) {

        this.value = value;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#clone()
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        MessageLabelPojo clonedMessageLabelPojo = new MessageLabelPojo();
        
        clonedMessageLabelPojo.setLabel( label );
        clonedMessageLabelPojo.setValue( value );
        clonedMessageLabelPojo.setCreatedDate( createdDate );
        clonedMessageLabelPojo.setModifiedDate( modifiedDate );
        clonedMessageLabelPojo.setModifiedNxUserId( modifiedNxUserId );
        clonedMessageLabelPojo.setMessage( message );
        
        return clonedMessageLabelPojo;
    }
    
    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals( Object obj ) {

        if ( obj instanceof MessageLabelPojo ) {
            if ( nxMessageLabelId == 0 ) {
                return super.equals( obj );
            }
            return ( nxMessageLabelId == ( (MessageLabelPojo) obj ).getNxMessageLabelId() );
        }

        return false;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {

        if ( nxMessageLabelId == 0 ) {
            return super.hashCode();
        }

        return nxMessageLabelId;
    }

}
